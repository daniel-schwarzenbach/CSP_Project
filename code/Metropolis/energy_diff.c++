#include <Metropolis/energy_diff.h++>


using Indiex = StaticArray<int, 3>;
// Calculate Energy Difference //

// This function calculates and returns the energy difference of two spin
// configurations, that just differ at one position. In the context 
// of the Metropolis algorithm this means the energy difference between
// an initial configuration and a proposed update of the lattice
// that is generated by a trial move. The energy difference is then used
// to decide if the change is accepted.

// Input: 
//      - refrence to the lattice
//      - x coordinate of the changed spin
//      - y coordinate of the changed spin
//      - z coordinate of the changed spin
//      - initial spin
//      - proposed spin update
//      - interaction strength J of the Heisenberg model

// Output: 
//      Returns the energy difference of the two spin configurations.
F64 calculateEnergyDiff(Lattice& lattice, int x, int y, int z, 
                        Spin& oldSpin, Spin& newSpin, 
                        F64 J /*interactionStrength*/){

    // Get dimensions of the lattice
    int Lx = lattice.Lx();
    int Ly = lattice.Ly();
    int Lz = lattice.Lz();

    // Indices of nearest neighbors (periodic boundary conditions assumed)
    // int neighbors[6][3] = {
    //     {(x + 1) % Lx, y, z}, {(x - 1 + Lx) % Lx, y, z}, // +x, -x neighbors
    //     {x, (y + 1) % Ly, z}, {x, (y - 1 + Ly) % Ly},    // +y, -y neighbors
    //     {x, y, (z + 1) % Lz}, {x, y, (z - 1 + Lz) % Lz}  // +z, -z neighbors
    // };
    Array<Indiex> neighbors = {
        {x+1, y, z}, {x-1, y, z},
        {x, y+1, z}, {x, y-1, z},
        {x, y, z+1}, {x, y, z-1}
    };
    // Energies of old and new configuration
    F64 energyOld = 0.0;
    F64 energyNew = 0.0;
    for (int i = 0; i < 6; ++i) {
        // Get indices of neighbors
        // Get neighboring spin
        const Spin& neighborSpin = lattice(neighbors[i]);
        // Calcualte and add energies
        energyOld += -J * (oldSpin | neighborSpin);
        energyNew += -J * (newSpin | neighborSpin);
    }   
    // Calculate energy difference (deltaE)
    F64 deltaE = energyNew - energyOld;
    return deltaE;
}